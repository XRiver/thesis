在本篇论文完成之际，也就意味着我在南京大学软件学院的学习生涯也将要结束了。我要向曾经帮助过我的导师、同学和朋友致以最诚挚的感谢。首先要感谢我的论文指导老师邵栋老师。在整个论文写作的过程中，邵老师对我耐心帮助，在论文不足之处他总是及时耐心地提出修改和优化的建议。每一次和邵老师交谈，我都能感受到邵老师作为师长的责任与担当。邵老师对待学术严谨的态度和平易近人的生活作风深深的影响着我，使我受益终身。


同时，我要感谢实习期间给予我帮助的"buddy"王志平和公司给予我帮助的所有同事们。他们在项目完成和技术指导上给了我很大的帮助，感谢他们在忙于工作的同时还能抽出时间对我进行指导。这段经历，我相信在我以后的工作生活中一定会有很大的借鉴意义。

最后我要感谢南京大学软件学院和南京大学软件学院所有的教职工人员。是他们为能来到南京软件学院读研的同学们提供了一个开放的包容的成长环境，他们高远的学术视野和严谨的工作作风深深的影响着每一个南京大学软件学院的学子们。在南京读硕士的这两年，让我对自己的认识更清晰，对自己的未来更有信心。谢谢大家！




\section{HDFS}

HDFS（Hadoop Distributed File）是Apache Hadoop自带的一个开源的分布式文件系统。HDFS通过多机备份机制实现了高容错以及高并发的特性，同时由于 HDFS 对部署机器要求较低，适合于部署在大量通用的PC机上，因此HDFS被广泛应用于海量数据处理过程中的数据存储~\cite{Hadoop}。StellarDB支持从HDFS解析导入图数据。

HDFS 系统是一个典型的主从结构集群，集群中的节点分为两种，包括一个namenode和多个datanode。Namenode是中心服务器，负责管理 HDFS 文件系统的命名空间以及客户端对文件的访问，保存文件系统树、访问控制信息、文件/数据块映射关系等文件元数据。Datanode 负责保存数据块，同时需要响应文件系统客户端的读写请求~\cite{DBLP:books/daglib/0035689}。

与磁盘的存储方式类似，在HDFS中，文件也是以数据块为单位进行存储的。文件存储到 HDFS 时会被分割成数据块大小的多个分开，如果文件大小小于 HDFS 系统设定的数据块大小，文件也并不会占据整个数据块空间，而是会与其他文件共同占据该数据块。由于过大的文件会被分割成较小的数据块，数据块可以存储于 HDFS 系统中的任意磁盘中，所以 HDFS 系统中可以存储超大的文件，而不需要受到磁盘大小的限制。

数据块的大小是固定的，这个设计极大程度上简化了 HDFS 系统的设计复杂度，并使文件的权限信息等元数据得以与文件数据分开管理。同时，HDFS系统通过将每个数据块在多台机器上进行备份，提高了数据访问的并发度以及文件系统的容错能力，进而降低了对于部署机器的硬件水平的要求，使得 HDFS可以部署在普通的 PC 机集群上而不会发生数据丢失。

当需要读数据时，客户端首先要向namenode发送读数据请求；namenode根据客户端提供的文件信息，判断文件是否存在以及客户端是否具有相应文件的读取权限，并返回文件地址或拒绝访问响应；如果客户端收到文件地址，会根据文件地址向对应的 datanode 直接发送读数据请求；datanode 接收到客户端的请求后会返回数据。

当需要写数据时，客户端首先要向namenode发送写数据请求；namenode判断是否允许写入，并向客户端返回判断结果；如果客户端收到允许写入响应，会将文件进行分块，并向namenode申请数据块空间namenode将返回数据要写入的 datanode 列表；最后，客户端将数据写入datanode。Datanode 会在彼此之间传输数据块以实现多副本备份，不需要客户端向多个datanode 写入同一个数据块。